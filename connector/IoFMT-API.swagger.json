{
  "info": {
    "title": "IoFMT REST API",
    "summary": "This is a REST API for IoFMT Inception project",
    "description": "This REST API acts as a Facade for connecting to SFG20 GraphAPI and maintain a cache to expedite performance.\n        <br><br>\n        This API is also mapped in a Power Platform Custom Connector.\n        <br><br>\n        To generate the API KEY for a customer, please go to: <a href='/admin' target='_blank'>Admin</a>",
    "version": "1.0.0",
    "x-logo": {
      "url": "https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png"
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Basic"
        ],
        "summary": "Get Api Status",
        "operationId": "get_api_status",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/schedules": {
      "post": {
        "tags": [
          "SFG20"
        ],
        "summary": "Get Schedules",
        "description": "Search SFG20 schedules according to the parameters provided and load into the cache",
        "operationId": "get_schedules",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SearchTerm"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/shared-links": {
      "post": {
        "tags": [
          "SFG20"
        ],
        "summary": "Get Shared Links",
        "description": "List the SFG20 shared links available for the user",
        "operationId": "get_shared_links",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConfigSharedLinks"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/task/complete": {
      "post": {
        "tags": [
          "SFG20"
        ],
        "summary": "Complete Task",
        "description": "Mark a task as completed in SFG20",
        "operationId": "complete_task",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/task_group/complete": {
      "post": {
        "tags": [
          "SFG20"
        ],
        "summary": "Complete Task Group",
        "description": "Mark a group of tasks as completed in SFG20",
        "operationId": "complete_task_group",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TaskGroup"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cache": {
      "post": {
        "tags": [
          "Cache"
        ],
        "summary": "Get From Cache",
        "description": "List the data in the cache according to the parameters provided. When a parameter is",
        "operationId": "get_from_cache",
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CacheParameters"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "Cache"
        ],
        "summary": "Delete From Cache",
        "description": "Delete all the data in the cache for the selected user",
        "operationId": "delete_from_cache",
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/config/add": {
      "post": {
        "tags": [
          "Config"
        ],
        "summary": "Config Add",
        "description": "Add a new configuration to the Config table",
        "operationId": "config_add",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Config"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/config/delete/{id}": {
      "delete": {
        "tags": [
          "Config"
        ],
        "summary": "Config Delete",
        "description": "Delete the configuration from the Config table",
        "operationId": "config_delete",
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/config/get/{id}": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Config Select",
        "description": "Select a configuration from the Config table",
        "operationId": "config_select",
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/config/token": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Config Select Token",
        "description": "Delete the configuration from the Config table",
        "operationId": "config_select_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/config/shared_links": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Config Shared Links",
        "description": "Get the shared links for the user",
        "operationId": "config_select_shared_links",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "Config"
        ],
        "summary": "Add Shared Link",
        "description": "Add a new shared link for the user",
        "operationId": "config_add_shared_link",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SharedLinks"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/config/shared_links/{id}": {
      "delete": {
        "tags": [
          "Config"
        ],
        "summary": "Delete Shared Link",
        "description": "Delete a shared link for the user",
        "operationId": "config_delete_shared_link",
        "security": [
          {
            "APIKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Result"
            }
          },
          "422": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/HTTPValidationError"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Basic",
      "description": "Endpoint without authentication to check the API status."
    },
    {
      "name": "SFG20",
      "description": "Endpoints to integrate with SFG20 API and our internal cache."
    },
    {
      "name": "Config",
      "description": "Endpoints to access the configuration data."
    },
    {
      "name": "Cache",
      "description": "Endpoints to interact with the internal cache."
    }
  ],
  "swagger": "2.0",
  "definitions": {
    "CacheParameters": {
      "properties": {
        "user_id": {
          "type": "string",
          "title": "User ID",
          "description": "The ID of the user",
          "example": "admin@iofmt.com"
        },
        "sharelink_id": {
          "type": "string",
          "title": "Sharelink ID",
          "description": "The ID of the SFG20 sharelink"
        },
        "schedule_id": {
          "type": "string",
          "title": "Schedule ID",
          "description": "The ID of the SFG20 schedule"
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "The type of the entity",
          "example": "schedules"
        },
        "order_field": {
          "type": "string",
          "title": "Order Field",
          "description": "The field to order the data by"
        },
        "order_direction": {
          "type": "string",
          "title": "Order Direction",
          "description": "The direction to order the data by"
        }
      },
      "type": "object",
      "required": [
        "user_id",
        "sharelink_id"
      ],
      "title": "CacheParameters"
    },
    "Config": {
      "properties": {
        "api_key": {
          "type": "string",
          "title": "API Key",
          "description": "The newly generated API Key"
        },
        "customer_name": {
          "type": "string",
          "title": "Customer Name",
          "description": "The name of the SFG20 customer"
        },
        "access_token": {
          "type": "string",
          "title": "Access Token",
          "description": "The Access Token provided by SFG20"
        },
        "sfg_environment": {
          "type": "string",
          "title": "SFG Environment",
          "description": "The SFG20 environment"
        }
      },
      "type": "object",
      "required": [
        "api_key",
        "customer_name",
        "access_token",
        "sfg_environment"
      ],
      "title": "Config"
    },
    "ConfigSharedLinks": {
      "properties": {
        "sharelink_id": {
          "type": "string",
          "title": "Sharelink ID",
          "description": "The ID of the SFG20 sharelink"
        },
        "access_token": {
          "type": "string",
          "title": "Access Token",
          "description": "The Access Token provided by SFG20"
        }
      },
      "type": "object",
      "required": [
        "sharelink_id",
        "access_token"
      ],
      "title": "ConfigSharedLinks"
    },
    "Entities": {
      "type": "string",
      "enum": [
        "all",
        "schedules",
        "assets",
        "tasks",
        "frequencies",
        "skills",
        "classifications"
      ],
      "title": "Entities"
    },
    "HTTPValidationError": {
      "properties": {
        "detail": {
          "items": {
            "$ref": "#/definitions/ValidationError"
          },
          "type": "array",
          "title": "Detail"
        }
      },
      "type": "object",
      "title": "HTTPValidationError"
    },
    "Result": {
      "properties": {
        "status": {
          "type": "string",
          "title": "Status",
          "description": "The status of the request"
        },
        "message": {
          "type": "string",
          "title": "Message",
          "description": "The message of the request"
        },
        "data": {
          "items": {
            "type": "object"
          },
          "type": "array",
          "title": "Data",
          "description": "The data of the request"
        }
      },
      "type": "object",
      "required": [
        "status",
        "message",
        "data"
      ],
      "title": "Result"
    },
    "SearchTerm": {
      "properties": {
        "sharelink_id": {
          "type": "string",
          "title": "Sharelink ID",
          "description": "The ID of the SFG20 sharelink"
        },
        "access_token": {
          "type": "string",
          "title": "Access Token",
          "description": "The Access Token provided by SFG20"
        },
        "user_id": {
          "type": "string",
          "title": "User ID",
          "description": "The ID of the user"
        },
        "changes_since": {
          "title": "Changes Since",
          "description": "The date of changes since the last update"
        }
      },
      "type": "object",
      "required": [
        "sharelink_id",
        "access_token",
        "user_id"
      ],
      "title": "SearchTerm"
    },
    "SharedLinks": {
      "properties": {
        "api_key": {
          "type": "string",
          "title": "API Key",
          "description": "The generated API Key"
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The ID of the SFG20 shared link"
        },
        "link_name": {
          "type": "string",
          "title": "Link Name",
          "description": "The name of the shared link"
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "The URL of the shared link"
        }
      },
      "type": "object",
      "required": [
        "api_key",
        "id",
        "link_name",
        "url"
      ],
      "title": "SharedLinks"
    },
    "Task": {
      "properties": {
        "sharelink_id": {
          "type": "string",
          "title": "Shared Link ID",
          "description": "The ID of the shared link"
        },
        "access_token": {
          "type": "string",
          "title": "Access Token",
          "description": "The Access Token provided by SFG20"
        },
        "asset_id": {
          "type": "string",
          "title": "Asset ID",
          "description": "The ID of the asset"
        },
        "asset_index": {
          "type": "integer",
          "title": "Asset Index",
          "description": "The index of the asset"
        },
        "task_id": {
          "type": "string",
          "title": "Task ID",
          "description": "The ID of the task"
        },
        "completion_date": {
          "type": "string",
          "title": "Completion Date",
          "description": "The date of completion"
        }
      },
      "type": "object",
      "required": [
        "sharelink_id",
        "access_token",
        "asset_id",
        "asset_index",
        "task_id",
        "completion_date"
      ],
      "title": "Task"
    },
    "TaskGroup": {
      "properties": {
        "sharelink_id": {
          "type": "string",
          "title": "Shared Link ID",
          "description": "The ID of the shared link"
        },
        "access_token": {
          "type": "string",
          "title": "Access Token",
          "description": "The Access Token provided by SFG20"
        },
        "completion_date": {
          "type": "string",
          "title": "Completion Date",
          "description": "The date of completion"
        },
        "schedule_id": {
          "type": "string",
          "title": "Schedule ID",
          "description": "The ID of the schedule"
        },
        "visit": {
          "title": "Visit",
          "description": "The visit number"
        },
        "asset_id": {
          "type": "string",
          "title": "Asset ID",
          "description": "The ID of the asset"
        },
        "tasks_completed": {
          "items": {
            "$ref": "#/definitions/TaskGroupItem"
          },
          "type": "array",
          "title": "Tasks Completed",
          "description": "The tasks completed"
        }
      },
      "type": "object",
      "required": [
        "sharelink_id",
        "access_token",
        "completion_date",
        "schedule_id",
        "asset_id",
        "tasks_completed"
      ],
      "title": "TaskGroup"
    },
    "TaskGroupItem": {
      "properties": {
        "task_id": {
          "type": "string",
          "title": "Task ID",
          "description": "The ID of the task"
        },
        "duration_minutes": {
          "type": "integer",
          "title": "Duration Minutes",
          "description": "The duration of the task in minutes"
        },
        "completion_date": {
          "type": "string",
          "title": "Completion Date",
          "description": "The date of completion"
        }
      },
      "type": "object",
      "required": [
        "task_id",
        "duration_minutes",
        "completion_date"
      ],
      "title": "TaskGroupItem"
    },
    "ValidationError": {
      "properties": {
        "loc": {
          "items": {},
          "type": "array",
          "title": "Location"
        },
        "msg": {
          "type": "string",
          "title": "Message"
        },
        "type": {
          "type": "string",
          "title": "Error Type"
        }
      },
      "type": "object",
      "required": [
        "loc",
        "msg",
        "type"
      ],
      "title": "ValidationError"
    }
  },
  "securityDefinitions": {
    "APIKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-Access-Token"
    }
  },
  "x-components": {}
}